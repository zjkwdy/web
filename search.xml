<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Debian环境搭建nginx+php+mysql环境</title>
    <url>/2021/01/24/Debian%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BAnginx-php-mysql%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>首先切换到root</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su -</span><br></pre></td></tr></table></figure>
<p>然后检查更新</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt upgrade -y</span><br></pre></td></tr></table></figure>
<p>安装程序包：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt install nginx php-fpm php-xml php-mysql default-mysql-server default-mysql-client vim -y</span><br></pre></td></tr></table></figure>
<p>tips:如果没有找到程序包，可以使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt search 预期包名</span><br></pre></td></tr></table></figure>
<p>(e.g. mysql)</p>
<p>完事之后，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;default</span><br></pre></td></tr></table></figure>
<p>按i进入编辑模式，修改下面几处</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        #端口设置，不用动</span><br><span class="line">        listen 80 default_server;</span><br><span class="line">        listen [::]:80 default_server;</span><br><span class="line">        #网站根目录，我没习惯动。</span><br><span class="line">        root &#x2F;var&#x2F;www&#x2F;html;</span><br><span class="line">        #起始页名，在里面加一个index.php     </span><br><span class="line">        index index.php index.html index.htm index.nginx-debian.html;</span><br><span class="line">        #服务器名字，不用管他</span><br><span class="line">        server_name _;</span><br><span class="line"></span><br><span class="line">        #在这里找到这些，把一部分注释去掉。</span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">                #这个注释去掉</span><br><span class="line">                include snippets&#x2F;fastcgi-php.conf;</span><br><span class="line">                #我们用的是php-fpm,所以去掉这个注释。</span><br><span class="line">                fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.3-fpm.sock;</span><br><span class="line">        #别的不用管他，注意底下有个括号也要去掉注释。</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>确认无误按esc退出编辑，输入:wq保存。<br>我们在网站根目录新建一个phpinfo.php比如根目录/var/www/html就运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;var&#x2F;www&#x2F;html&#x2F;phpinfo.php &amp;&amp; chmod 777 &#x2F;var&#x2F;www&#x2F;html&#x2F;phpinfo.php</span><br></pre></td></tr></table></figure>
<p>内容写</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php phpinfo() ?&gt;</span><br></pre></td></tr></table></figure>
<p>然后重启nginx服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure>
<p>在浏览器访问机器ip/phpinfo.php应该能看到一大坨内容。如果没有就要检查配置了。最后配置mysql.新安装的mysql是没有密码的，我们要给他设置密码。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqladmin -uroot password</span><br></pre></td></tr></table></figure>

<p>新密码刷新权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqladmin -uroot flush-privileges</span><br></pre></td></tr></table></figure>
<p>搞定啦~</p>
]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>建站</tag>
        <tag>Debian</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkdownTest</title>
    <url>/2021/01/25/MarkdownTest/</url>
    <content><![CDATA[<h1 id="Markdown语法测试"><a href="#Markdown语法测试" class="headerlink" title="Markdown语法测试"></a>Markdown语法测试</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>普通文本</p>
<hr>
<p>分割线</p>
<hr>
<blockquote>
<p>引用</p>
<blockquote>
<p>多级引用</p>
</blockquote>
</blockquote>
<ul>
<li>无序列表</li>
<li>无序列表</li>
</ul>
<ol>
<li>数字列表</li>
<li>数字列表</li>
</ol>
<ul>
<li><input disabled="" type="checkbox"> 确认框</li>
<li><input checked="" disabled="" type="checkbox"> 打勾确认框<br>  缩进<br><a href="https://wdsjimin.gitee.io/img/welcome-cover.jpg">链接</a><br><img src="https://wdsjimin.gitee.io/img/welcome-cover.jpg" alt="图片"></li>
</ul>
<table>
<thead>
<tr>
<th>表格测试</th>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody><tr>
<td>c</td>
<td>d</td>
<td>e</td>
</tr>
</tbody></table>
<p><code>代码</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">代码块</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>公告</category>
      </categories>
      <tags>
        <tag>公告</tag>
      </tags>
  </entry>
  <entry>
    <title>Python实现自动点赞收藏防护林有关视频</title>
    <url>/2021/01/26/Python%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E7%82%B9%E8%B5%9E%E6%94%B6%E8%97%8F%E9%98%B2%E6%8A%A4%E6%9E%97%E6%9C%89%E5%85%B3%E8%A7%86%E9%A2%91/</url>
    <content><![CDATA[<h2 id="python实现爬取B站防护林有关视频并自动点赞收藏"><a href="#python实现爬取B站防护林有关视频并自动点赞收藏" class="headerlink" title="python实现爬取B站防护林有关视频并自动点赞收藏"></a>python实现爬取B站防护林有关视频并自动点赞收藏</h2><hr>
<p>这几天看见敦煌防护林的事情，挺气愤的。我就一个宅男也干不了什么，就写了个脚本自动搜索点赞收藏防护林相关视频。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment">#这个脚本设计初衷是点赞收藏防护林视频。希望后续使用它的人不要拿来整明星刷数据就可以了</span></span><br><span class="line"><span class="comment">#作者:IMin</span></span><br><span class="line"><span class="comment">#搜索关键词，返回搜索结果，参数：</span></span><br><span class="line"><span class="comment">#keyword:关键词，page:页码,search_type:视频为video</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_keyword</span>(<span class="params">keyword, page, search_type</span>):</span></span><br><span class="line">    search_api = <span class="string">&#x27;https://api.bilibili.com/x/web-interface/search/type?page=%s&amp;keyword=%s&amp;search_type=%s&#x27;</span> % (</span><br><span class="line">        page, keyword, search_type)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> requests.get(search_api).json()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;err&#x27;</span></span><br><span class="line"><span class="comment">#获取搜索页数,keyword为关键词，返回这个关键词可以搜出的页数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_search_pages</span>(<span class="params">keyword</span>):</span></span><br><span class="line">    search_api = <span class="string">&#x27;https://api.bilibili.com/x/web-interface/search/type?page=1&amp;keyword=%s&amp;search_type=video&#x27;</span> % (</span><br><span class="line">        keyword)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> requests.get(search_api).json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;numPages&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;err&#x27;</span></span><br><span class="line"><span class="comment">#点赞视频，bvid是bv号，sessdata和csrf是浏览器cookie</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">like_video</span>(<span class="params">bvid, SESSDATA, csrf</span>):</span></span><br><span class="line">    like_api = <span class="string">&#x27;http://api.bilibili.com/x/web-interface/archive/like&#x27;</span></span><br><span class="line">    like_header = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;SESSDATA=%s; bili_jct=%s;&#x27;</span> % (SESSDATA, csrf),</span><br><span class="line">        <span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;https://www.bilibili.com&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    like_fromData = &#123;</span><br><span class="line">        <span class="string">&#x27;bvid&#x27;</span>: bvid,</span><br><span class="line">        <span class="string">&#x27;like&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;csrf&#x27;</span>: csrf</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> requests.post(url=like_api, headers=like_header, data=like_fromData).json()[<span class="string">&#x27;code&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;err&#x27;</span></span><br><span class="line"><span class="comment">#收藏视频，只接受av号，参数：avid:av号,deal_id:收藏夹id,SESSDATA、csrf:cookie，鉴权用。返回收藏结果。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deal_video</span>(<span class="params">avid, deal_id, SESSDATA, csrf</span>):</span></span><br><span class="line">    deal_api = <span class="string">&#x27;https://api.bilibili.com/x/v3/fav/resource/deal&#x27;</span></span><br><span class="line">    deal_header = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, deal Gecko) Chrome/87.0.4280.141 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;SESSDATA=%s; bili_jct=%s;&#x27;</span> % (SESSDATA, csrf),</span><br><span class="line">        <span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;https://www.bilibili.com&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    deal_fromData = &#123;</span><br><span class="line">        <span class="string">&#x27;rid&#x27;</span>: avid,</span><br><span class="line">        <span class="string">&#x27;type&#x27;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">&#x27;add_media_ids&#x27;</span>: deal_id,</span><br><span class="line">        <span class="string">&#x27;del_media_ids&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;jsonp&#x27;</span>: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;csrf&#x27;</span>: csrf</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> requests.post(url=deal_api, headers=deal_header, data=deal_fromData).json()[<span class="string">&#x27;code&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;err&#x27;</span></span><br><span class="line"><span class="comment">#获取视频下推荐视频。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getRelate</span>(<span class="params">bvid</span>):</span></span><br><span class="line">    relate_api = <span class="string">&#x27;http://api.bilibili.com/x/web-interface/archive/related?bvid=&#x27;</span>+bvid</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> requests.get(relate_api).json()[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;err&#x27;</span></span><br><span class="line"><span class="comment">#翻译结果码。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">translate_StatCode</span>(<span class="params">statCode</span>):</span></span><br><span class="line">    codeList = &#123;<span class="number">0</span>: <span class="string">&#x27;成功&#x27;</span>, -<span class="number">101</span>: <span class="string">&#x27;账号未登录、错误&#x27;</span>, -<span class="number">400</span>: <span class="string">&#x27;请求错误：未知错误&#x27;</span>,</span><br><span class="line">                <span class="number">65006</span>: <span class="string">&#x27;已经赞过&#x27;</span>, -<span class="number">111</span>: <span class="string">&#x27;csrf校验失败，请检查填写是否正确&#x27;</span>, -<span class="number">403</span>: <span class="string">&#x27;访问权限不足&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> codeList[statCode]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;未知错误&#x27;</span></span><br><span class="line"><span class="comment">#建立新收藏夹，groupname是名字，intro是简介,sessdata csrf是cookie,返回建立收藏夹的id</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_newFavGroup</span>(<span class="params">Groupname, intro, SESSDATA, csrf</span>):</span></span><br><span class="line">    api_url = <span class="string">&#x27;https://api.bilibili.com/x/v3/fav/folder/add&#x27;</span></span><br><span class="line">    fav_header = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, deal Gecko) Chrome/87.0.4280.141 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;SESSDATA=%s; bili_jct=%s;&#x27;</span> % (SESSDATA, csrf),</span><br><span class="line">        <span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;https://www.bilibili.com&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    fav_data = &#123;</span><br><span class="line">        <span class="string">&#x27;title&#x27;</span>: Groupname,</span><br><span class="line">        <span class="string">&#x27;intro&#x27;</span>: intro,</span><br><span class="line">        <span class="string">&#x27;privacy&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&#x27;cover&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;csrf&#x27;</span>: csrf,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> requests.post(url=api_url, headers=fav_header, data=fav_data).json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;err&#x27;</span></span><br><span class="line">keyword = <span class="built_in">input</span>(<span class="string">&#x27;请输入关键词（例如：敦煌防护林、防护林）一条: &#x27;</span>)</span><br><span class="line">SESSDATA = <span class="built_in">input</span>(<span class="string">&#x27;请输入浏览器Cookie中的SESSDATA: &#x27;</span>)</span><br><span class="line">csrf = <span class="built_in">input</span>(<span class="string">&#x27;请输入浏览器Cookie中的bili_jct: &#x27;</span>)</span><br><span class="line">deal_id = make_newFavGroup(keyword, keyword, SESSDATA, csrf)</span><br><span class="line">print(<span class="string">&#x27;[新收藏夹]id:&#x27;</span>, deal_id)</span><br><span class="line">page_num = get_search_pages(keyword)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(page_num):</span><br><span class="line">        <span class="comment">#搜索关键字</span></span><br><span class="line">        search_result = search_keyword(keyword, page+<span class="number">1</span>, <span class="string">&#x27;video&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> search_result != <span class="string">&#x27;err&#x27;</span>:</span><br><span class="line">            <span class="comment">#将视频条条代出</span></span><br><span class="line">            <span class="keyword">for</span> video <span class="keyword">in</span> search_result[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;result&#x27;</span>]:</span><br><span class="line">                <span class="comment">#获取视频信息</span></span><br><span class="line">                video_bvid = video[<span class="string">&#x27;bvid&#x27;</span>]</span><br><span class="line">                video_avid = video[<span class="string">&#x27;aid&#x27;</span>]</span><br><span class="line">                video_title = video[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">                <span class="comment">#获取推荐视频</span></span><br><span class="line">                relate_videos = getRelate(video_bvid)</span><br><span class="line">                <span class="comment">#点赞收藏推荐视频</span></span><br><span class="line">                <span class="keyword">for</span> relate_video <span class="keyword">in</span> relate_videos:</span><br><span class="line">                    relate_bvid = relate_video[<span class="string">&#x27;bvid&#x27;</span>]</span><br><span class="line">                    relate_avid = relate_video[<span class="string">&#x27;aid&#x27;</span>]</span><br><span class="line">                    relate_title = relate_video[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">if</span> (keyword <span class="keyword">in</span> relate_title)==<span class="literal">True</span>:</span><br><span class="line">                        like_result = translate_StatCode(</span><br><span class="line">                            like_video(relate_bvid, SESSDATA, csrf))</span><br><span class="line">                        deal_result = translate_StatCode(</span><br><span class="line">                            deal_video(relate_avid, deal_id, SESSDATA, csrf))</span><br><span class="line">                        print(<span class="string">&#x27;[推荐视频]点赞收藏:视频 《%s》 ,点赞状态:%s,收藏状态:%s&#x27;</span> %</span><br><span class="line">                            (relate_title, like_result, deal_result))</span><br><span class="line">                like_result = translate_StatCode(</span><br><span class="line">                    like_video(video_bvid, SESSDATA, csrf))</span><br><span class="line">                deal_result = translate_StatCode(</span><br><span class="line">                    deal_video(video_avid, deal_id, SESSDATA, csrf))</span><br><span class="line">                <span class="keyword">if</span> deal_result == <span class="number">11203</span>:</span><br><span class="line">                <span class="comment">#收藏已满的状态码，满后在建</span></span><br><span class="line">                    deal_id = make_newFavGroup(</span><br><span class="line">                        keyword, keyword, SESSDATA, csrf)</span><br><span class="line">                    print(<span class="string">&#x27;[新收藏夹]id:&#x27;</span>, deal_id)</span><br><span class="line">                print(<span class="string">&#x27;点赞收藏:视频 《%s》 ,点赞状态: %s ,收藏状态: %s &#x27;</span> %</span><br><span class="line">                      (video_title, like_result, deal_result))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">&#x27;搜索请求拉取失败，请检查网络&#x27;</span>)</span><br><span class="line">    os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>仓库地址：<a href="https://gitee.com/wdsjimin/auto-search-like-fav-bilibili-videos">https://gitee.com/wdsjimin/auto-search-like-fav-bilibili-videos</a></p>
]]></content>
      <categories>
        <category>Python</category>
        <category>日常</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>博客开始从Z-Blog迁移向静态化的Hexo</title>
    <url>/2021/01/24/%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%A7%8B%E4%BB%8EZ-Blog%E8%BF%81%E7%A7%BB%E5%90%91%E9%9D%99%E6%80%81%E5%8C%96%E7%9A%84Hexo/</url>
    <content><![CDATA[<h1 id="博客迁移公告"><a href="#博客迁移公告" class="headerlink" title="博客迁移公告"></a><strong>博客迁移公告</strong></h1><p>这是我在Hexo框架下的第一篇博客。<br>原本的跳转做法虽然看起来好使但是，它不能被百度收录，所以帮不了别人。<br>（自娱自乐）<br>所以我今天我把gitee仓库配置好了Hexo.<del><strong>（我可是没吃早饭）</strong></del><br><strong>抽空可能会写这个静态博客的配置过程（笑）</strong><br>之后原来博客的一些文章会慢慢过来，取决于我的心情（）<br>评论什么的抽空再折腾，需要在Github上搞，哪天心情好了就折腾了。</p>
]]></content>
      <categories>
        <category>公告</category>
      </categories>
      <tags>
        <tag>公告</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Mysql无法存储emoji</title>
    <url>/2021/01/25/%E8%A7%A3%E5%86%B3Mysql%E6%97%A0%E6%B3%95%E5%AD%98%E5%82%A8emoji/</url>
    <content><![CDATA[<h1 id="解决Mysql无法存储emoji"><a href="#解决Mysql无法存储emoji" class="headerlink" title="解决Mysql无法存储emoji"></a>解决Mysql无法存储emoji</h1><p>这几天放假无聊搞博客（当时还是z-blog），无意间发现发不出emoji?</p>
<hr>
<p>经过我的排查（百度）发现是mysql编码的问题。<br>原来的编码是utf8_general_ci，它采用3字节存储一个文字。<br>但是emoji是4个字节，所以，<del>太大了塞不进去</del><br>知道了问题出在哪里，就可以着手修问题了。首先我们下载一个phpmyadmin放在网站根目录配置好，具体百度。（因为是ui界面用起来舒服）<br>然后用你的mysql账户密码登录phpmyadmin,<br>找到你博客对应的数据库，在工具栏找操作，在最底下就有个排序规则。把他改成utf8mb4_general_ci。<br>然后勾选更改所有表排序规则和所有列规则，执行。重启一下mysql、php和nginx然后就可以发出emoji辣！</p>
<hr>
<p>参考资料<a href="https://wiki.zblogcn.com/doku.php?id=zblogphp:failure:cannotemoji">https://wiki.zblogcn.com/doku.php?id=zblogphp:failure:cannotemoji</a></p>
<p><a href="http://zctou.com/?p=1502">http://zctou.com/?p=1502</a></p>
]]></content>
      <categories>
        <category>建站</category>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>建站</tag>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>htmlTest</title>
    <url>/2021/01/28/htmlTest/</url>
    <content><![CDATA[<h2 id="iframe标签"><a href="#iframe标签" class="headerlink" title="iframe标签"></a>iframe标签</h2><iframe width="100%" scrolling=no height="800" frameborder="0" src="http://player.bilibili.com/player.html?bvid=BV1p7411q7LF"></iframe>

<h2 id="audio标签"><a href="#audio标签" class="headerlink" title="audio标签"></a>audio标签</h2><p><audio src="//link.hhtjim.com/163/5221167.mp3"></audio></p>
<h2 id="video标签"><a href="#video标签" class="headerlink" title="video标签"></a>video标签</h2><p><video src="//link.hhtjim.com/163/5365570.mp4" controls="controls"></video></p>
]]></content>
      <categories>
        <category>公告</category>
      </categories>
      <tags>
        <tag>公告</tag>
      </tags>
  </entry>
</search>
